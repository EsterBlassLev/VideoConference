{"ast":null,"code":"import { participantType } from \"../../models/userType.enum\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ParticipantService = /*#__PURE__*/(() => {\n  class ParticipantService {\n    constructor(_http) {\n      this._http = _http;\n      this.participantsOthers = [{\n        id: 2,\n        firstName: 'Joh',\n        lastName: 'Minz',\n        job: participantType.Lawyerdefendant,\n        speaker: false,\n        video: true,\n        sharedScreen: false,\n        recording: false\n      }, {\n        id: 3,\n        firstName: 'Maya',\n        lastName: 'Baron',\n        job: participantType.defendant,\n        speaker: true,\n        video: false,\n        sharedScreen: false,\n        recording: false\n      }];\n      this.participantsjudge = [{\n        id: 2,\n        firstName: 'Joh',\n        lastName: 'Minz',\n        job: participantType.judge,\n        speaker: false,\n        video: true,\n        sharedScreen: false,\n        recording: false\n      }]; // updateParticipant(id: number, participantToUpdate: Participant) {\n      //     return this._http.put<Participant>(\"/api/Participant/UpdateParticipant/\" + id, participantToUpdate);\n      // }\n\n      this.index = 0;\n    } // getAllParticipants(): Observable<Participant[]> {\n    //     return this._http.get<Participant[]>(\"api/Participant/GetParticipants\");\n    // }\n\n\n    getAllParticipantsOthers() {\n      return this.participantsOthers;\n    }\n\n    getAllParticipantsjudge() {\n      return this.participantsjudge;\n    } // getParticipantById(id:number): Observable<Participant> {\n    //     return this._http.get<Participant>(\"/api/Participant/GetParticipantById/\"+id)\n    // }\n\n\n    getParticipantById(id) {\n      if (this.participantsOthers.find(p => p.id === id) !== undefined) return this.participantsOthers.find(p => p.id === id);\n      return this.participantsjudge.find(p => p.id === id);\n    }\n\n    updateParticipant(id, participantToUpdate) {\n      if (participantToUpdate.job !== participantType.judge) {\n        this.index = this.participantsOthers.findIndex(p => p.id === id);\n\n        if (this.index !== -1) {\n          this.participantsOthers = this.participantsOthers.slice(this.index, this.index + 1);\n        }\n\n        if (participantToUpdate.job !== participantType.judge) {\n          this.participantsOthers.push(participantToUpdate);\n        } else {\n          this.participantsjudge.push(participantToUpdate);\n        }\n      } else {\n        this.index = this.participantsjudge.findIndex(p => p.id === id);\n        if (this.index !== -1) this.participantsjudge = this.participantsjudge.slice(this.index, this.index + 1);\n\n        if (participantToUpdate.job !== participantType.judge) {\n          this.participantsOthers.push(participantToUpdate);\n        } else {\n          this.participantsjudge.push(participantToUpdate);\n        }\n      }\n    }\n\n  }\n\n  ParticipantService.ɵfac = function ParticipantService_Factory(t) {\n    return new (t || ParticipantService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ParticipantService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ParticipantService,\n    factory: ParticipantService.ɵfac\n  });\n  return ParticipantService;\n})();","map":null,"metadata":{},"sourceType":"module"}